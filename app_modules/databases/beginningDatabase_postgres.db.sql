set transaction read write; 
BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "country_currency" (
	"id"	SERIAL PRIMARY KEY,
	"country_name"	VARCHAR(50),
	"currency_name"	VARCHAR(50),
	"currency_code"	VARCHAR(3),
	UNIQUE("country_name")
);
CREATE TABLE IF NOT EXISTS "user" (
	"id"	SERIAL PRIMARY KEY,
	"uuid"	VARCHAR(50),
	"name"	VARCHAR(100) NOT NULL,
	"email"	VARCHAR(50) NOT NULL,
	"phone"	VARCHAR(14),
	"last_logged_in"	DATE,
	UNIQUE("phone"),
	UNIQUE("email"),
	UNIQUE("uuid")
);
CREATE TABLE IF NOT EXISTS "security_question" (
	"id"	SERIAL PRIMARY KEY,
	"question"	VARCHAR(120)
);
CREATE TABLE IF NOT EXISTS "account_type" (
	"id"	SERIAL PRIMARY KEY,
	"account_type"	VARCHAR(50) NOT NULL
);
CREATE TABLE IF NOT EXISTS "collection_type" (
	"id"	SERIAL PRIMARY KEY,
	"type"	VARCHAR(20) NOT NULL,
	UNIQUE("type")
);
CREATE TABLE IF NOT EXISTS "payment_method" (
	"id"	SERIAL PRIMARY KEY,
	"method"	VARCHAR(20) NOT NULL,
	UNIQUE("method")
);
CREATE TABLE IF NOT EXISTS "user_role" (
	"id"	SERIAL PRIMARY KEY,
	"role"	VARCHAR(20) NOT NULL,
	UNIQUE("role")
);
CREATE TABLE IF NOT EXISTS "society" (
	"id"	SERIAL PRIMARY KEY,
	"name"	VARCHAR(120) NOT NULL,
	"address"	VARCHAR(120) NOT NULL,
	"pin_code"	INTEGER NOT NULL,
	"country_currency_id"	INTEGER NOT NULL,
	FOREIGN KEY("country_currency_id") REFERENCES "country_currency"("id"),
	UNIQUE("name","address","pin_code")
);
CREATE TABLE IF NOT EXISTS "password_manager" (
	"id"	SERIAL PRIMARY KEY,
	"password"	VARCHAR(120) NOT NULL,
	"user_id"	INTEGER,
	FOREIGN KEY("user_id") REFERENCES "user"("id"),
	UNIQUE("user_id")
);
CREATE TABLE IF NOT EXISTS "role_manager" (
	"id"	SERIAL PRIMARY KEY,
	"user_id"	INTEGER NOT NULL,
	"society_id"	INTEGER,
	"role_id"	INTEGER,
	FOREIGN KEY("role_id") REFERENCES "user_role"("id"),
	FOREIGN KEY("society_id") REFERENCES "society"("id"),
	FOREIGN KEY("user_id") REFERENCES "user"("id"),
	UNIQUE("user_id","society_id")
);
CREATE TABLE IF NOT EXISTS "flat" (
	"id"	SERIAL PRIMARY KEY,
	"society_id"	INTEGER NOT NULL,
	"flat_code"	VARCHAR(10) NOT NULL,
	"area"	INTEGER NOT NULL,
	FOREIGN KEY("society_id") REFERENCES "society"("id"),
	UNIQUE("society_id","flat_code")
);
CREATE TABLE IF NOT EXISTS "collection" (
	"id"	SERIAL PRIMARY KEY,
	"name"	VARCHAR(120) NOT NULL,
	"society_id"	INTEGER NOT NULL,
	"type_id"	INTEGER NOT NULL,
	"rate"	INTEGER NOT NULL,
	"fixed"	BOOLEAN NOT NULL,
	"balance"	INTEGER NOT NULL,
	"collection_start_date"	DATE NOT NULL,
	FOREIGN KEY("type_id") REFERENCES "collection_type"("id"),
	FOREIGN KEY("society_id") REFERENCES "society"("id")
);
CREATE TABLE IF NOT EXISTS "member" (
	"id"	SERIAL PRIMARY KEY,
	"user_id"	INTEGER NOT NULL,
	"flat_id"	INTEGER NOT NULL,
	FOREIGN KEY("user_id") REFERENCES "user"("id"),
	FOREIGN KEY("flat_id") REFERENCES "flat"("id"),
	UNIQUE("user_id","flat_id")
);
CREATE TABLE IF NOT EXISTS "flat_owner" (
	"id"	SERIAL PRIMARY KEY,
	"member_id"	INTEGER,
	FOREIGN KEY("member_id") REFERENCES "member"("id"),
	UNIQUE("member_id")
);
CREATE TABLE IF NOT EXISTS "account" (
	"id"	SERIAL PRIMARY KEY,
	"account_type_id"	INTEGER NOT NULL,
	"owner_id"	INTEGER,
	"due_amount"	INTEGER NOT NULL,
	FOREIGN KEY("account_type_id") REFERENCES "account_type"("id"),
	FOREIGN KEY("owner_id") REFERENCES "flat_owner"("id"),
	UNIQUE("owner_id")
);
CREATE TABLE IF NOT EXISTS "transaction_log" (
	"id"	SERIAL PRIMARY KEY,
	"sender_id"	INTEGER,
	"receiver_id"	INTEGER,
	"amount"	INTEGER NOT NULL,
	"date"	DATE NOT NULL,
	"method_id"	INTEGER NOT NULL,
	FOREIGN KEY("method_id") REFERENCES "payment_method"("id"),
	FOREIGN KEY("sender_id") REFERENCES "account"("id"),
	FOREIGN KEY("receiver_id") REFERENCES "account"("id")
);
CREATE TABLE IF NOT EXISTS "income" (
	"id"	SERIAL PRIMARY KEY,
	"owner_id"	INTEGER NOT NULL,
	"expected_amount"	INTEGER NOT NULL,
	"transaction_id"	INTEGER,
	"collection_id"	INTEGER NOT NULL,
	FOREIGN KEY("collection_id") REFERENCES "collection"("id"),
	FOREIGN KEY("owner_id") REFERENCES "flat_owner"("id"),
	FOREIGN KEY("transaction_id") REFERENCES "transaction_log"("id"),
	UNIQUE("collection_id","owner_id"),
	UNIQUE("transaction_id")
);
CREATE TABLE IF NOT EXISTS "expense" (
	"id"	SERIAL PRIMARY KEY,
	"collection_id"	INTEGER NOT NULL,
	"transaction_id"	INTEGER NOT NULL,
	FOREIGN KEY("collection_id") REFERENCES "collection"("id"),
	FOREIGN KEY("transaction_id") REFERENCES "transaction_log"("id"),
	UNIQUE("transaction_id")
);
CREATE TABLE IF NOT EXISTS "transaction_comment" (
	"id"	SERIAL PRIMARY KEY,
	"comment"	VARCHAR(200),
	"transaction_id"	INTEGER NOT NULL,
	FOREIGN KEY("transaction_id") REFERENCES "transaction_log"("id"),
	UNIQUE("transaction_id")
);
CREATE TABLE IF NOT EXISTS "user_question_answer" (
	"id"	SERIAL PRIMARY KEY,
	"user_id"	INTEGER NOT NULL,
	"question_id"	INTEGER NOT NULL,
	"answer"	VARCHAR(120) NOT NULL,
	FOREIGN KEY("question_id") REFERENCES "security_question"("id"),
	FOREIGN KEY("user_id") REFERENCES "user"("id")
);
INSERT INTO "country_currency" ("country_name","currency_name","currency_code") VALUES ('Afghanistan','Afghan afghani','AFN'),
('Albania','Albanian lek','ALL'),
('Algeria','Algerian dinar','DZD'),
('Andorra','Euro','EUR'),
('Angola','Angolan kwanza','AOA'),
('Antigua and Barbuda','East Caribbean dollar','XCD'),
('Argentina','Argentine peso','ARS'),
('Armenia','Armenian dram','AMD'),
('Australia','Australian dollar','AUD'),
('Austria','Euro','EUR'),
('Azerbaijan','Azerbaijani manat','AZN'),
('Bahamas','Bahamian dollar','BSD'),
('Bahrain','Bahraini dinar','BHD'),
('Bangladesh','Bangladeshi taka','BDT'),
('Barbados','Barbadian dollar','BBD'),
('Belarus','Belarusian ruble','BYN'),
('Belgium','Euro','EUR'),
('Belize','Belize dollar','BZD'),
('Benin','West African CFA franc','XOF'),
('Bhutan','Bhutanese ngultrum','BTN'),
('Bolivia','Bolivian boliviano','BOB'),
('Bosnia and Herzegovina','Bosnia and Herzegovina convertible mark','BAM'),
('Botswana','Botswana pula','BWP'),
('Brazil','Brazilian real','BRL'),
('Brunei','Brunei dollar','BND'),
('Bulgaria','Bulgarian lev','BGN'),
('Burkina Faso','West African CFA franc','XOF'),
('Burundi','Burundian franc','BIF'),
('Cambodia','Cambodian riel','KHR'),
('Cameroon','Central African CFA franc','XAF'),
('Canada','Canadian dollar','CAD'),
('Cape Verde','Cape Verdean escudo','CVE'),
('Central African Republic','Central African CFA franc','XAF'),
('Chad','Central African CFA franc','XAF'),
('Chile','Chilean peso','CLP'),
('China','Chinese yuan','CNY'),
('Colombia','Colombian peso','COP'),
('Comoros','Comorian franc','KMF'),
('Costa Rica','Costa Rican colón','CRC'),
('Croatia','Croatian kuna','HRK'),
('Cuba','Cuban peso','CUP'),
('Cyprus','Euro','EUR'),
('Czech Republic','Czech koruna','CZK'),
('Democratic Republic of Congo','Congolese franc','CDF'),
('Denmark','Danish krone','DKK'),
('Djibouti','Djiboutian franc','DJF'),
('Dominica','East Caribbean dollar','XCD'),
('Dominican Republic','Dominican peso','DOP'),
('East Timor','United States dollar','USD'),
('Ecuador','United States dollar','USD'),
('Egypt','Egyptian pound','EGP'),
('El Salvador','United States dollar','USD'),
('Equatorial Guinea','Central African CFA franc','XAF'),
('Eritrea','Eritrean nakfa','ERN'),
('Estonia','Euro','EUR'),
('Eswatini','Swazi lilangeni','SZL'),
('Ethiopia','Ethiopian birr','ETB'),
('Fiji','Fijian dollar','FJD'),
('Finland','Euro','EUR'),
('France','Euro','EUR'),
('Gabon','Central African CFA franc','XAF'),
('Gambia','Gambian dalasi','GMD'),
('Georgia','Georgian lari','GEL'),
('Germany','Euro','EUR'),
('Ghana','Ghanaian cedi','GHS'),
('Greece','Euro','EUR'),
('Grenada','East Caribbean dollar','XCD'),
('Guatemala','Guatemalan quetzal','GTQ'),
('Guinea','Guinean franc','GNF'),
('Guinea-Bissau','West African CFA franc','XOF'),
('Guyana','Guyanese dollar','GYD'),
('Haiti','Haitian gourde','HTG'),
('Honduras','Honduran lempira','HNL'),
('Hungary','Hungarian forint','HUF'),
('Iceland','Icelandic króna','ISK'),
('India','Indian rupee','INR'),
('Indonesia','Indonesian rupiah','IDR'),
('Iran','Iranian rial','IRR'),
('Iraq','Iraqi dinar','IQD'),
('Ireland','Euro','EUR'),
('Israel','Israeli new shekel','ILS'),
('Italy','Euro','EUR'),
('Ivory Coast','West African CFA franc','XOF'),
('Jamaica','Jamaican dollar','JMD'),
('Japan','Japanese yen','JPY'),
('Jordan','Jordanian dinar','JOD'),
('Kazakhstan','Kazakhstani tenge','KZT'),
('Kenya','Kenyan shilling','KES'),
('Kiribati','Australian dollar','AUD'),
('Korea, North','North Korean won', 'KPW'),
('Korea, South','South Korean won', 'KRW'),
('Kosovo','Euro','EUR'),
('Kuwait','Kuwaiti dinar','KWD'),
('Kyrgyzstan','Kyrgyzstani som','KGS'),
('Laos','Lao kip','LAK'),
('Latvia','Euro','EUR'),
('Lebanon','Lebanese pound','LBP'),
('Lesotho','Lesotho loti','LSL'),
('Liberia','Liberian dollar','LRD'),
('Libya','Libyan dinar','LYD'),
('Liechtenstein','Swiss franc','CHF'),
('Lithuania','Euro','EUR'),
('Luxembourg','Euro','EUR'),
('Madagascar','Malagasy ariary','MGA'),
('Malawi','Malawian kwacha','MWK'),
('Malaysia','Malaysian ringgit','MYR'),
('Maldives','Maldivian rufiyaa','MVR'),
('Mali','West African CFA franc','XOF'),
('Malta','Euro','EUR'),
('Marshall Islands','United States dollar','USD'),
('Mauritania','Mauritanian ouguiya','MRO'),
('Mauritius','Mauritian rupee','MUR'),
('Mexico','Mexican peso','MXN'),
('Micronesia','United States dollar','USD'),
('Moldova','Moldovan leu','MDL'),
('Monaco','Euro','EUR'),
('Mongolia','Mongolian tögrög','MNT'),
('Montenegro','Euro','EUR'),
('Morocco','Moroccan dirham','MAD'),
('Mozambique','Mozambican metical','MZN'),
('Myanmar','Burmese kyat','MMK'),
('Namibia','Namibian dollar','NAD'),
('Nauru','Australian dollar','AUD'),
('Nepal','Nepalese rupee','NPR'),
('Netherlands','Euro','EUR'),
('New Zealand','New Zealand dollar','NZD'),
('Nicaragua','Nicaraguan córdoba','NIO'),
('Niger','West African CFA franc','XOF'),
('Nigeria','Nigerian naira','NGN'),
('North Macedonia','Macedonian denar','MKD'),
('Norway','Norwegian krone','NOK'),
('Oman','Omani rial','OMR'),
('Pakistan','Pakistani rupee','PKR'),
('Palau','United States dollar','USD'),
('Palestine','Israeli new shekel','ILS'),
('Panama','Panamanian balboa','PAB'),
('Papua New Guinea','Papua New Guinean kina','PGK'),
('Paraguay','Paraguayan guaraní','PYG'),
('Peru','Peruvian sol','PEN'),
('Philippines','Philippine peso','PHP'),
('Poland','Polish zloty','PLN'),
('Portugal','Euro','EUR'),
('Qatar','Qatari riyal','QAR'),
('Republic of the Congo','Central African CFA franc','XAF'),
('Romania','Romanian leu','RON'),
('Russia','Russian ruble','RUB'),
('Rwanda','Rwandan franc','RWF'),
('Saint Kitts and Nevis','East Caribbean dollar','XCD'),
('Saint Lucia','East Caribbean dollar','XCD'),
('Saint Vincent and the Grenadines','East Caribbean dollar','XCD'),
('Samoa','Samoan tala','WST'),
('San Marino','Euro','EUR'),
('São Tomé and Príncipe','São Tomé and Príncipe dobra','STD'),
('Saudi Arabia','Saudi riyal','SAR'),
('Senegal','West African CFA franc','XOF'),
('Serbia','Serbian dinar','RSD'),
('Seychelles','Seychellois rupee','SCR'),
('Sierra Leone','Sierra Leonean leone','SLL'),
('Singapore','Singapore dollar','SGD'),
('Slovakia','Euro','EUR'),
('Slovenia','Euro','EUR'),
('Solomon Islands','Solomon Islands dollar','SBD'),
('Somalia','Somali shilling','SOS'),
('South Africa','South African rand','ZAR'),
('South Sudan','South Sudanese pound','SSP'),
('Spain','Euro','EUR'),
('Sri Lanka','Sri Lankan rupee','LKR'),
('Sudan','Sudanese pound','SDG'),
('Suriname','Surinamese dollar','SRD'),
('Sweden','Swedish krona','SEK'),
('Switzerland','Swiss franc','CHF'),
('Syria','Syrian pound','SYP'),
('Taiwan','New Taiwan dollar','TWD'),
('Tajikistan','Tajikistani somoni','TJS'),
('Tanzania','Tanzanian shilling','TZS'),
('Thailand','Thai baht','THB'),
('Togo','West African CFA franc','XOF'),
('Tonga','Tongan pa''anga','TOP'),
('Trinidad and Tobago','Trinidad and Tobago dollar','TTD'),
('Tunisia','Tunisian dinar','TND'),
('Turkey','Turkish lira','TRY'),
('Turkmenistan','Turkmenistan manat','TMT'),
('Tuvalu','Australian dollar','AUD'),
('Uganda','Ugandan shilling','UGX'),
('Ukraine','Ukrainian hryvnia','UAH'),
('United Arab Emirates','United Arab Emirates dirham','AED'),
('United Kingdom','British pound','GBP'),
('United States','United States dollar','USD'),
('Uruguay','Uruguayan peso','UYU'),
('Uzbekistan','Uzbekistani som','UZS'),
('Vanuatu','Vanuatu vatu','VUV'),
('Vatican City','Euro','EUR'),
('Venezuela','Venezuelan bolívar','VEF'),
('Vietnam','Vietnamese dong','VND'),
('Yemen','Yemeni rial','YER'),
('Zambia','Zambian kwacha','ZMW'),
('Zimbabwe','United States dollar','USD');
INSERT INTO "user" ("uuid","name","email","phone","last_logged_in") VALUES ('37683cce-e44b-4f55-b8d4-6de3d46f2d12','Master','master@email.com','1234567890','2022-02-21 10:47:25.607906'),
 ('350be8ce-447f-422e-8903-185f63fa1272','Admin','admin@email.com','12341515111','2022-02-21 19:22:36.070993'),
 ('29b0ea48-c0b1-4db4-8331-3b931b59d2e6','User','user@email.com','123415123311','2022-02-21 16:12:07.627662');
INSERT INTO "security_question" ("question") VALUES ('What is the name of your favorite pet?'),
 ('What high school did you attend?'),
 ('What is the name of your first school?'),
 ('What was the make of your first car?'),
 ('What was your favorite food as a child?'),
 ('When is your Birthday?'),
 ('In what city or town did your parents meet?');
INSERT INTO "account_type" ("account_type") VALUES ('Owner'),
 ('System'),
 ('All Owners'),
 ('Miscellaneous'),
 ('Security'),
 ('Electricity'),
 ('Sweeper');
INSERT INTO "account" ("account_type_id","owner_id","due_amount") VALUES (2,NULL,0),
 (3,NULL,0),
 (4,NULL,0),
 (5,NULL,0),
 (6,NULL,0),
 (7,NULL,0);
INSERT INTO "collection_type" ("type") VALUES ('Monthly'),
 ('Festive'),
 ('Emergency');
INSERT INTO "payment_method" ("method") VALUES ('Internal'),
 ('Cash'),
 ('Google Pay'),
 ('Phone Pe'),
 ('Paytm'),
 ('UPI'),
 ('IMPS'),
 ('Other');
INSERT INTO "user_role" ("role") VALUES ('Master'),
 ('Admin'),
 ('User');
INSERT INTO "password_manager" ("password","user_id") VALUES ('sha256$HV3q1tBoq40y7L4h$3dab967e303cd55b0db894228ac32f899846ed615851f8ab29b0b93b67c7dcd8',1),
 ('sha256$VqsGtqPXmiXOrHET$1cc5c5a9ebf5768c8993e23262fd44a945fc248c32c8fc08f86ca46225dfd426',2),
 ('sha256$keNXKAeEbOuggP5D$7f0c4781752624faaec3e05d5cf3492a177762f0a2d0cd386410ad82fd03cf1d',3);
INSERT INTO "role_manager" ("user_id","society_id","role_id") VALUES (1,NULL,1);
COMMIT;